buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.3.6"
group = "com.ice2670.plasmaengines" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PlasmaEngine"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2825"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20180808"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenLocal()
    maven { url 'https://jitpack.io'
    }
    maven {
        name = "spongepowered-repo"
        url = "http://repo.spongepowered.org/maven/"
    }
    maven {
        name = "OpenComputers"
        url = "http://maven.cil.li/"
    }
    maven {
        name = "Dogforce Games"
        url = "http://dogforce-games.com/maven"
    }

    jcenter()

    
}

dependencies {

    // Needs to be present at compile-time because we mix in to spongeforge, however marking it as
    // compile makes forge load it as a mod in a dev environment, which is very annoying

    // mixin as annotation processor

    // BetterPortals compatibility
    // deobfCompile 'curse.maven:shadowfacts-forgelin:2785465'
    // deobfCompile 'curse.maven:betterportals:2883633'


    // ODE4j physics engine (https://mvnrepository.com/artifact/org.ode4j/core)
    // shade group: 'org.ode4j', name: 'core', version: '0.4.0' // 800KB
    // shade group: 'org.ode4j', name: 'demo', version: '0.4.0'

    // javax inject annotation


    // CQEngine for in-memory nonpersistent database
    // Provides Kryo
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    /*deobfCompile('com.github.ValkyrienSkies:Valkyrien-Skies:breaking/1.0-SNAPSHOT') {
        transitive = false
    }*/
    deobfCompile('com.Ice2670:VSb2:0.0.1')
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
